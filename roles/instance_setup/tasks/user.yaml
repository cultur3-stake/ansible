- name: Authorize new user public key
  authorized_key:
    user: "{{ target_user_name }}"
    state: present
    key: "{{ lookup('file', '~/.ssh/id_c3s.pub') }}"

- name: Create .bash_files directory
  file:
    path: /etc/skel/.bash_files 
    state: directory

- name: Check for existing .bash_files file
  stat: 
    path: /etc/skel/.bash_files/.bashrc
  register: bash_files_file

- name: Move files to .bash_files directory
  command: mv /etc/skel/.bash_logout /etc/skel/.bashrc /etc/skel/.profile /etc/skel/.bash_files
  when: bash_files_file.stat.exists == false

- name: Write .alias to skel
  copy:
    src: .alias
    dest: /etc/skel

- name: Write .motd to skel
  copy:
    src: .motd
    dest: /etc/skel

- name: Write .zsh_plugins.list to skel
  copy:
    src: .zsh_plugins.list
    dest: /etc/skel

- name: Write .hushlogin to skel
  file:
    path: /etc/skel/.hushlogin
    state: touch

- name: Add new user
  user:
    name: "{{ target_user_name }}"
    shell: /bin/zsh
    password: "{{ target_user_pass }}"
    groups: sudo

- block:
  - name: Write .oh-my-zsh-install.sh to home
    copy:
      src: .oh-my-zsh-install.sh
      dest: ~/

  - name: Install oh-my-zsh
    shell: sh ~/.oh-my-zsh-install.sh
    args: 
      creates: ~/.oh-my-zsh

  - name: Install antidote
    shell: git clone --depth=1 https://github.com/mattmc3/antidote.git ~/.antidote
    args:
      creates: ~/.antidote

  - name: Write .zshrc to new user's home dir
    copy:
      src: .zshrc
      dest: ~/
  become: true
  become_user: "{{ target_user_name }}"

- name: Disable root login
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^PermitRootLogin yes$'
    line: 'PermitRootLogin no'
    backrefs: yes
